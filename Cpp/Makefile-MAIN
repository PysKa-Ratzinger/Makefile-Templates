SRC_DIR         := ./src
OBJ_DIR         := ./build
BIN_DIR         := ./bin
TEST_DIR        := ./tests
TARGET_RUNNER   := main

CFLAGS_COMMON := \
	-O0 -g \
	-Wall \
	-Wextra \
	-Werror \
	-Wno-unused-label \
	-Wformat-security
CXXFLAGS_COMMON := \
	$(CFLAGS_COMMON) \
	-std=c++20 \
	-fvisibility-inlines-hidden

LDFLAGS_SHARED_COMMON := -shared -fvisibility=hidden -fvisibility-inlines-hidden
#LDFLAGS_COMMON := `pkg-config --static --libs libname1 libname2 libname3`
#LDFLAGS_SHARED_PROD := -s -Wl,--gc-sections -Wl,--strip-all $(LDFLAGS_SHARED_COMMON)
LDFLAGS_SHARED_PROD := -Wl,--gc-sections -Wl,--strip-all -Wl,--version-script=lib.script $(LDFLAGS_SHARED_COMMON)

CFLAGS         += $(CFLAGS_COMMON)
CXXFLAGS       += $(CXXFLAGS_COMMON)
LDFLAGS_SHARED += $(LDFLAGS_SHARED_COMMON)
#LDFLAGS        += $(LDFLAGS_COMMON)

dir_guard=@mkdir -p $(@D)

SOURCES_C   =\
	$(shell find $(SRC_DIR) -type f -name '*.c')
SOURCES_CPP =\
	$(shell find $(SRC_DIR) -type f -name '*.cpp')

OBJECTS_C   =\
	$(patsubst $(SRC_DIR)/%.c,        $(OBJ_DIR)/%.o,                $(SOURCES_C))
OBJECTS_CPP =\
	$(patsubst $(SRC_DIR)/%.cpp,      $(OBJ_DIR)/%.o,                $(SOURCES_CPP))

OBJECTS         = $(OBJECTS_CPP) $(OBJECTS_C)
DEPS            = $(patsubst %.o, %.d, $(OBJECTS))

all: target

target: $(BIN_DIR)/$(TARGET_RUNNER)

-include $(DEPS)

$(BIN_DIR)/$(TARGET_RUNNER): $(OBJECTS)
	$(dir_guard)
	$(CXX) $(LDFLAGS) -I./src -I./include $+ -o $@ $(LDLIBS)

$(OBJECTS_C): $(OBJ_DIR)/%.o : $(SRC_DIR)/%.c
	$(dir_guard)
	$(CC) -MMD -MP -c $< -I./src -I./include $(CFLAGS) -o $@

$(OBJECTS_CPP): $(OBJ_DIR)/%.o : $(SRC_DIR)/%.cpp
	$(dir_guard)
	$(CXX) -MMD -MP -c $< -I./src -I./include $(CXXFLAGS) -o $@

run: all
	$(BIN_DIR)/$(TARGET_RUNNER)

lint: all check_lint
	cppcheck -i src

clean: check_clean
	rm -rvf $(BIN_DIR) $(OBJ_DIR)

check: all
	cd $(TEST_DIR) && $(MAKE) run
#	make -C $(TEST_DIR)
#	make -C $(TEST_DIR) run

check_valgrind: all
	cd $(TEST_DIR) && $(MAKE) run_valgrind

check_lint: all
	cd $(TEST_DIR) && $(MAKE) lint

check_clean:
	cd $(TEST_DIR) && $(MAKE) clean
#	make -C $(TEST_DIR) clean

